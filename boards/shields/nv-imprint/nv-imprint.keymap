#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    behaviors {
        esc_grave: esc_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W     &kp E     &kp R      &kp T      &kp Y          &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp LCTRL  &kp A  &kp S     &kp D     &kp F      &kp G      &kp H          &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C     &kp V      &kp B      &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                  &kp LGUI  &kp LALT                                                  &mo 4      &mo 5
                                      &lt 2 DEL             &kp ENTER
                                      &kp SPACE  &mo 3      &kp BACKSPACE  &kp SPACE
            >;
        };

        auto_mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans     &trans     &trans  &trans  &trans
                &trans  &trans                                         &trans     &trans
                                &trans              &trans
                                &trans  &trans      &trans  &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans                                      &trans  &trans
                                &trans              &trans
                                &trans  &trans      &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&esc_grave  &trans    &trans  &kp END    &trans     &trans      &trans    &kp PG_UP  &trans  &trans     &kp MINUS  &kp EQUAL
&trans      &kp HOME  &trans  &kp PG_DN  &trans     &trans      &kp LEFT  &kp DOWN   &kp UP  &kp RIGHT  &kp LBKT   &kp RBKT
&trans      &trans    &trans  &trans     &trans     &trans      &trans    &trans     &trans  &trans     &trans     &trans
                      &trans  &trans                                                 &trans  &trans
                                         &kp PSCRN              &kp C_PP
                                         &trans     &trans      &trans    &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                &trans   &trans                                        &trans  &trans
                                  &trans               &trans
                                  &trans   &trans      &trans  &trans
            >;
        };

        keyboard_control_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4         &trans  &trans  &trans  &trans  &trans  &trans
&trans      &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF      &trans  &trans  &trans  &trans  &trans  &trans
                             &trans           &trans                                                                 &trans  &trans
                                                               &trans                                &trans
                                                               &trans           &trans               &trans  &trans
            >;
        };
    };
};

// right hand trackball configuration
&trackball_peripheral_listener {
    input-processors =
        <&zip_temp_layer 1 300>;
};

//left hand trackball configuration
&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
